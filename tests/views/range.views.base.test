<?php

/**
 * @file
 * Contains range views base test class.
 */

/**
 * Base class for testing range views handlers.
 */
abstract class RangeViewsBaseTestCase extends ViewsTestCase {

  /**
   * Entity type ID we are testing against.
   *
   * @var string
   */
  protected $entityTypeId = 'node';

  /**
   * Content type we are testing against.
   *
   * @var string
   */
  protected $contentType = 'test_bundle';

  /**
   * Name of the field we are testing against.
   *
   * Note, this is used in the default test view.
   *
   * @var string
   */
  protected $fieldName = 'field_range_integer';

  /**
   * Nodes to test.
   *
   * @var stdClass[]
   */
  protected $nodes = array();

  /**
   * {@inheritdoc}
   */
  protected function setUp(array $modules = array()) {
    $modules[] = 'range';
    $modules[] = 'views';
    parent::setUp($modules);

    // Add a date field to page nodes.
    $content_type = new stdClass();
    $content_type->type = $this->contentType;
    $content_type->name = $this->contentType;
    $content_type->base = 'node_content';
    $content_type->custom = 1;
    $content_type->locked = 0;
    $content_type->modified = 1;

    node_type_save($content_type);

    node_types_rebuild();
    menu_rebuild();

    // Reset permissions so that permissions for this content type are available.
    $this->checkPermissions(array(), TRUE);

    $field = array(
      'field_name' => $this->fieldName,
      'type' => 'range_integer',
      'cardinality' => 1,
      'settings' => array(),
    );
    field_create_field($field);

    $instance = array(
      'field_name' => $this->fieldName,
      'entity_type' => $this->entityTypeId,
      'bundle' => $this->contentType,
      'label' => $this->randomName(),
    );
    field_create_instance($instance);

    views_invalidate_cache();

    // Set column map.
    $this->map = array('nid' => 'nid');
  }

}
